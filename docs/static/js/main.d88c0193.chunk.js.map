{"version":3,"sources":["components/AddCategory.js","components/GiftGridItem.js","helpers/getGifs.js","components/GiftGrid.js","hooks/useFetchGifs.js","App.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GiftGridItem","title","url","className","src","alt","getGift","category","a","encodeURI","fetch","resp","json","data","gifts","map","img","id","images","downsized_medium","GiftGrid","loading","state","setState","useEffect","then","useFetchGifs","App","categories","rootElement","document","getElementById","ReactDOM","render"],"mappings":"2LAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAC5B,EAAoCC,mBAAS,KAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,QCJdG,EAAe,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACpC,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNGK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,iDACiCO,UACpDF,GAFmB,+DAIFG,MAAMR,GAJJ,cAIfS,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAQD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACLC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAXjB,kBAcdY,GAdc,4CAAH,sDCIPM,EAAW,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAGzB,ECJ0B,SAACA,GAC3B,MAA0BpB,mBAAS,CACjC0B,KAAM,GACNQ,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OARAC,qBAAU,WACRlB,EAAQC,GAAUkB,MAAK,SAACT,GACtBO,EAAS,CACPV,KAAMG,EACNK,SAAS,SAGZ,CAACd,IACGe,EDTmBI,CAAanB,GAA/BM,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,QAEd,OACE,qCACE,6BAAKd,IACJc,GAAW,wCACZ,qBAAKlB,UAAU,YAAf,SACGU,EAAKE,KAAI,SAACF,GACT,OAAO,cAAC,EAAD,eAAgCA,GAAbA,EAAKI,a,MEV1B,SAASU,IACtB,MAAoCxC,mBAAS,CAAC,cAA9C,mBAAOyC,EAAP,KAAmB1C,EAAnB,KACA,OACE,qCACE,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAE3B0C,EAAWb,KAAI,SAACR,GACf,OAAO,cAAC,EAAD,CAAyBA,SAAUA,GAApBA,SCR9B,IAAMsB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACN,EAAD,MAEFE,K","file":"static/js/main.d88c0193.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(' ');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport const GiftGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__bounce\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","export const getGift = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=okZw3zthSiahvRQcG9wzdvNhXkzLCJTL`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifts = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    };\r\n  });\r\n  return gifts;\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { GiftGridItem } from './GiftGridItem';\r\nimport { getGift } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nexport const GiftGrid = ({ category }) => {\r\n  // api key giphy api.giphy.com/v1/gifs/search?api_key=okZw3zthSiahvRQcG9wzdvNhXkzLCJTL&q=Rick&limit=10\r\n\r\n  const { data, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n      {loading && <p>Loading</p>}\r\n      <div className=\"card-grid\">\r\n        {data.map((data) => {\r\n          return <GiftGridItem key={data.id} {...data} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { getGift } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n  useEffect(() => {\r\n    getGift(category).then((img) => {\r\n      setState({\r\n        data: img,\r\n        loading: false\r\n      });\r\n    });\r\n  }, [category]);\r\n  return state;\r\n};\r\n","import { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GiftGrid } from './components/GiftGrid';\r\nimport './styles.css';\r\n\r\nexport default function App() {\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n  return (\r\n    <>\r\n      <h2>GiftExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n\r\n      {categories.map((category) => {\r\n        return <GiftGrid key={category} category={category} />;\r\n      })}\r\n    </>\r\n  );\r\n}\r\n","import { StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <App />\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}